name: Integration test on macos
on: [push, pull_request]
env:
  SPOT-VERSION: 2.11.5
jobs:
  test-on-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Reinstall Python
        run: brew reinstall python3

      - name: check is Python3 Installed
        run: python3 --version

      - name: Set-up Python venv
        run: python3 -m venv .venv
      
      - name: Search Python
        run: |
          . .venv/bin/activate
          echo "Current C path: $C_INCLUDE_PATH"

      # Building spot takes time, so we cache it.
      - name: Cache Spot
        id: cache-spot
        uses: actions/cache@v4
        env:
          cache-name: cache-spot
        with:
          path: spot-${{ env.SPOT-VERSION }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.SPOT-VERSION }}
      - if: ${{ steps.cache-spot.outputs.cache-hit != 'true' }}
        name: Build Spot
        run: |
          . .venv/bin/activate
          ## Download the source code of spot
          wget http://www.lrde.epita.fr/dload/spot/spot-${{ env.SPOT-VERSION }}.tar.gz
          tar xvf spot-${{ env.SPOT-VERSION }}.tar.gz
          cd spot-${{ env.SPOT-VERSION }}
          # Set path to Python.h
          if [[ -z $C_INCLUDE_PATH ]]; then
            # XXX: the version should be obtained from the command result
            C_INCLUDE_PATH="/Library/Frameworks/Python.framework/Versions/3.12/include/python3.12"
          fi
          echo "PATH: $C_INCLUDE_PATH"
          # Specify appropriate CPU/OS for your environment
          ./configure --prefix "$OLDPWD/.venv/"
          # Build Spot
          make -j8
      
      - name: Download Prism
        run: |
          wget http://www.prismmodelchecker.org/dl/prism-4.8.1-linux64-x86.tar.gz
          tar xfz prism-4.8.1-linux64-x86.tar.gz
          cd prism-4.8.1-linux64-x86
          ./install.sh

      - name: Install spot
        run: |
          cd spot-${{ env.SPOT-VERSION }}
          make install
      - name: Check spot installation
        run: |
          . .venv/bin/activate
          python3 -c "import spot"
      - name: Install AALpy
        run: |
          git clone https://github.com/DES-Lab/AALpy -b v.1.4.1 --depth 1
          . .venv/bin/activate
          cd AALpy
          patch -p1 < ../aalpy.patch
          python3 -m pip install pydot
          python3 setup.py install
      - name: Check AALpy installation
        run: |
          . .venv/bin/activate
          python3 -c "import aalpy"
      - name: Install other packages
        run: |
          . .venv/bin/activate
          pip install -r requirements.txt

      - name: Run src/main.py as an integration test
        run: |
          echo "workspace: $(pwd)"
          echo "$(pwd)/prism-4.8.1-linux64-x86/bin/prism"
          ls "$(pwd)/prism-4.8.1-linux64-x86/bin/prism"
          . .venv/bin/activate
          python3 src/main.py \
            --model-file benchmarks/mqtt/mqtt.dot \
            --prop-file benchmarks/mqtt/mqtt.props \
            --prism-path "$(pwd)/prism-4.8.1-linux64-x86/bin/prism" \
            --output-dir result \
            --min-rounds 3 \
            --max-rounds 5 \
            --save-files-for-each-round \
            --target-unambiguity 0.99

